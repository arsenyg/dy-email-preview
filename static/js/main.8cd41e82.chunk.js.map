{"version":3,"sources":["AppHeader.jsx","HTMLRender.jsx","VariablesPane.jsx","App.js","index.js"],"names":["AppHeader","props","title","AppBar","position","color","Toolbar","Typography","variant","useStyles","makeStyles","theme","container","display","alignItems","padding","spacing","flexGrow","noClicks","pointerEvents","fullSize","maxWidth","maxHeight","overflow","classNamePrefix","HTMLRender","html","classes","Grid","alignContent","Paper","className","item","xs","dangerouslySetInnerHTML","__html","VariablesPane","variables","onPreviewClicked","canPreview","valuesState","useMemo","reduce","acc","key","value","style","height","map","description","margin","TextField","id","label","onChange","e","target","handleChange","placeholder","fullWidth","InputLabelProps","shrink","Button","disabled","onClick","params","urlParams","RegExp","Object","keys","join","App","useState","setHTML","previewHTML","setPreviewHTML","currentTab","setCurrentTab","setVariables","useEffect","matches","match","values","slice","split","CssBaseline","variation","square","Tabs","indicatorColor","textColor","event","newValue","aria-label","Tab","marginTop","width","mode","name","editorProps","$blockScrolling","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showPrintMargin","wrap","trim","length","variableMapping","updatedHTML","forEach","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cd41e82.chunk.js","sourcesContent":["import { AppBar, Toolbar, Typography } from '@material-ui/core'\n\nfunction AppHeader(props) {\n  const { title } = props;\n\n  return (\n    <AppBar position=\"sticky\" color=\"primary\">\n      <Toolbar>\n        <Typography variant=\"h6\">\n          {title}\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default AppHeader;\n","import { makeStyles } from '@material-ui/core/styles';\nimport { Paper, Grid } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    alignItems: 'stretch',\n    padding: theme.spacing(3),\n    flexGrow: 1,\n  },\n  noClicks: {\n    pointerEvents: 'none',\n  },\n  fullSize: {\n    display: 'flex',\n    alignItems: 'stretch',\n    maxWidth: 'calc(50vw - 96px)',\n    maxHeight: 'calc(100vh - 156px)',\n    overflow: 'scroll',\n  },\n}), { classNamePrefix: 'dy' });\n\n\nfunction HTMLRender(props) {\n  const { html } = props;\n  const classes = useStyles();\n\n  return (\n    <Grid\n      container\n       alignContent=\"stretch\"\n    >\n      <Paper\n        variant=\"elevation\"\n        className={classes.container}\n      >\n        <Grid item xs={12} className={classes.fullSize}>\n          <div dangerouslySetInnerHTML={{ __html: html }} className={classes.noClicks} />\n        </Grid>\n      </Paper>\n    </Grid>\n  )\n}\n\nexport default HTMLRender;","import { useMemo } from 'react';\nimport { TextField, Grid, Button } from '@material-ui/core';\n\nconst VariablesPane = (props) => {\n  const { variables, onPreviewClicked, canPreview } = props;\n\n  const valuesState = useMemo(() => {\n    return variables.reduce((acc, { key, value }) => ({\n      ...acc,\n      [key]: value\n    }), {});\n  }, [variables]);\n\n  const handleChange = (e, key) => {\n    valuesState[key] = e.target.value;\n  }\n\n  return (\n    <Grid\n      container\n      alignContent=\"flex-start\"\n      style={{\n        height: '85vh',\n        overflow: 'scroll'\n      }}\n    >\n      {variables.map(({ key, description }) => {\n        return (\n          <Grid item xs={8} key={key} style={{ margin: '24px 0 0 24px' }}>\n            <TextField\n              id=\"standard-full-width\"\n              label={description}\n              style={{ margin: 8 }}\n              onChange={(e) => handleChange(e, key)}\n              placeholder={valuesState && valuesState[key]}\n              fullWidth\n              margin=\"normal\"\n              InputLabelProps={{\n                shrink: true,\n              }}\n            />\n          </Grid>\n        )\n      })}\n\n      <Grid item xs={12} style={{ margin: '24px 0 0 24px' }}>\n        <Button\n          disabled={!canPreview}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => onPreviewClicked(valuesState)}\n        >\n          Preview\n        </Button>\n      </Grid>\n    </Grid>\n  )\n};\n\nexport default VariablesPane;","import { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { CssBaseline, Grid, Paper, Tabs, Tab } from '@material-ui/core';\nimport '@fontsource/roboto';\nimport AppHeader from './AppHeader';\nimport HTMLRender from './HTMLRender';\nimport AceEditor from \"react-ace\";\n\nimport 'ace-builds/src-noconflict/mode-html';\nimport 'ace-builds/src-noconflict/theme-xcode';\nimport 'ace-builds/src-min-noconflict/ext-searchbox';\n\nimport VariablesPane from './VariablesPane';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    alignItems: 'stretch',\n    padding: theme.spacing(3),\n    flexGrow: 1,\n  },\n}), { classNamePrefix: 'dy' });\n\nconst params = {\n  'dy_cuid': 'User Identifier (dy_cuid)',\n  'dy_locale': 'Locale (dy_locale)',\n  'dy_version': 'Version (dy_version)',\n  'cartCtx': 'Cart Context (cartCtx)',\n};\n\nconst urlParams = new RegExp(`(?:\\\\?|&)(${Object.keys(params).join('|')})=([^\"|^&]+)`, 'g');\n\nfunction App() {\n  const classes = useStyles();\n  const [html, setHTML] = useState('');\n  const [previewHTML, setPreviewHTML] = useState('');\n\n  const [currentTab, setCurrentTab] = useState(0);\n  const [variables, setVariables] = useState([]);\n\n  const handleChange = (event, newValue) => {\n    setCurrentTab(newValue);\n  };\n\n  useEffect(() => {\n    const matches = html.match(urlParams);\n    setVariables(matches ? Object.values(matches.reduce((acc, item) => {\n      const [key, value] = item.slice(1).split('=');\n      acc[key] = { key, value, description: params[key] };\n\n      return acc;\n    }, {})) : []);\n  }, [html]);\n\n  return (\n    <>\n      <CssBaseline />\n      <AppHeader title=\"Email Preview\" />\n      <Grid container style={{ height: 'calc(100vh - 60px)' }}>\n        <Grid\n          item\n          xs={6}\n          className={classes.container}\n        >\n          <Paper variation=\"outlined\" style={{ flexGrow: 1 }}>\n            <Paper square>\n              <Tabs\n                value={currentTab}\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                onChange={handleChange}\n                aria-label=\"disabled tabs example\"\n              >\n                <Tab label=\"HTML\" />\n                <Tab label=\"Variables\" />\n              </Tabs>\n            </Paper>\n            {currentTab === 0 && (<AceEditor\n              style={{\n                marginTop: 1,\n                height: 'calc(100% - 49px)',\n                width: '100%',\n              }}\n              mode=\"html\"\n              theme=\"xcode\"\n              onChange={(newValue) => {\n                setHTML(newValue)\n              }}\n              value={html}\n              name=\"email-editor\"\n              editorProps={{ $blockScrolling: true }}\n              setOptions={{\n                enableBasicAutocompletion: true,\n                enableLiveAutocompletion: true,\n                enableSnippets: true,\n                showPrintMargin: false,\n                wrap: true,\n              }}\n            />)}\n            {currentTab === 1 && (\n              <VariablesPane variables={variables} canPreview={html.trim().length > 0} onPreviewClicked={(variableMapping) => {\n\n                let updatedHTML = html;\n                variables.forEach(({ key, value }) => {\n                  updatedHTML = updatedHTML.replace(new RegExp(`${key}=${value}`, 'g'), `${key}=${variableMapping[key]}`);\n                });\n\n                setPreviewHTML(updatedHTML);\n              }} />\n            )}\n          </Paper>\n        </Grid>\n        <Grid\n          item\n          xs={6}\n          className={classes.container}\n        >\n          <HTMLRender html={previewHTML} />\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}